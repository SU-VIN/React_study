{"ast":null,"code":"var _jsxFileName = \"/Users/imsubin/Documents/GitHub/React_study/React_project/src/App.js\";\nimport './App.css';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyList = [{\n  id: 1,\n  author: \"임수빈\",\n  content: \"hello\",\n  emotion: 4,\n  created_date: new Date().getTime()\n}, {\n  id: 2,\n  author: \"홍길동\",\n  content: \"hello1212\",\n  emotion: 1,\n  created_date: new Date().getTime()\n}, {\n  id: 3,\n  author: \"김나나\",\n  content: \"hello ㅎㅎ\",\n  emotion: 2,\n  created_date: new Date().getTime()\n}];\n\n//부모컴포넌트에서 자식컴포넌트에게 어떤값을 이름을붙여서 보내는게 prop\n//diaryList === prop임\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      diaryList: dummyList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["DiaryEditor","DiaryList","dummyList","id","author","content","emotion","created_date","Date","getTime","App"],"sources":["/Users/imsubin/Documents/GitHub/React_study/React_project/src/App.js"],"sourcesContent":["import './App.css'\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n\n\nconst dummyList = [\n  {\n    id:1,\n    author:\"임수빈\",\n    content:\"hello\",\n    emotion:4,\n    created_date: new Date().getTime()\n  },\n  {\n    id:2,\n    author:\"홍길동\",\n    content:\"hello1212\",\n    emotion:1,\n    created_date: new Date().getTime()\n  },\n  {\n    id:3,\n    author:\"김나나\",\n    content:\"hello ㅎㅎ\",\n    emotion:2,\n    created_date: new Date().getTime()\n  }\n]\n\n//부모컴포넌트에서 자식컴포넌트에게 어떤값을 이름을붙여서 보내는게 prop\n//diaryList === prop임\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DiaryEditor/>\n      <DiaryList diaryList={dummyList}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC;AAGpC,MAAMC,SAAS,GAAG,CAChB;EACEC,EAAE,EAAC,CAAC;EACJC,MAAM,EAAC,KAAK;EACZC,OAAO,EAAC,OAAO;EACfC,OAAO,EAAC,CAAC;EACTC,YAAY,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO;AAClC,CAAC,EACD;EACEN,EAAE,EAAC,CAAC;EACJC,MAAM,EAAC,KAAK;EACZC,OAAO,EAAC,WAAW;EACnBC,OAAO,EAAC,CAAC;EACTC,YAAY,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO;AAClC,CAAC,EACD;EACEN,EAAE,EAAC,CAAC;EACJC,MAAM,EAAC,KAAK;EACZC,OAAO,EAAC,UAAU;EAClBC,OAAO,EAAC,CAAC;EACTC,YAAY,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO;AAClC,CAAC,CACF;;AAED;AACA;AACA,SAASC,GAAG,GAAG;EACb,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eACd,QAAC,SAAS;MAAC,SAAS,EAAER;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEV;AAAC,KAPQQ,GAAG;AASZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}