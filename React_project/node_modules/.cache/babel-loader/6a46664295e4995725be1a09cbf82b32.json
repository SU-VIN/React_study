{"ast":null,"code":"var _jsxFileName = \"/Users/imsubin/Documents/GitHub/React_study/React_project/src/Lifecycle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lifecycle = () => {\n  _s();\n  // const[count,setCount]= useState(0)\n  // const[text,setText]=useState(\"\")\n\n  // useEffect(()=>{\n  //     console.log(\"Mount\")\n\n  // },[]);\n\n  // //defendency array 전달안하면 update!\n  // useEffect(()=>{\n  //     console.log(\"Update!\")\n  // })\n\n  // //defendency array의 값이 변화하면 callback이 실행\n  // useEffect(()=>{\n  //     console.log(`count is update : ${count}`)\n  //     if(count>5){\n  //         alert(\"count가 5를 넘었습니다 따라서 1로 초기화 합니다.\")\n  //         setCount(1)\n  //     }\n  // },[count])\n\n  // useEffect(()=>{\n  //     console.log(`text is update : ${text}`)\n  // },[text])\n\n  const [isVisible, setIsVisible] = useState(false);\n  const toggle = () => setIsVisible(!isVisible);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      children: \"ON/OFF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Lifecycle, \"jzu4prlL4El8roaNKUZaUbTmN+4=\");\n_c = Lifecycle;\nexport default Lifecycle;\nvar _c;\n$RefreshReg$(_c, \"Lifecycle\");","map":{"version":3,"names":["React","useEffect","useState","Lifecycle","isVisible","setIsVisible","toggle","padding"],"sources":["/Users/imsubin/Documents/GitHub/React_study/React_project/src/Lifecycle.js"],"sourcesContent":["import React,{useEffect, useState} from \"react\"\n\nconst Lifecycle = ()=>{\n\n    // const[count,setCount]= useState(0)\n    // const[text,setText]=useState(\"\")\n\n    // useEffect(()=>{\n    //     console.log(\"Mount\")\n\n    // },[]);\n\n    // //defendency array 전달안하면 update!\n    // useEffect(()=>{\n    //     console.log(\"Update!\")\n    // })\n\n    // //defendency array의 값이 변화하면 callback이 실행\n    // useEffect(()=>{\n    //     console.log(`count is update : ${count}`)\n    //     if(count>5){\n    //         alert(\"count가 5를 넘었습니다 따라서 1로 초기화 합니다.\")\n    //         setCount(1)\n    //     }\n    // },[count])\n\n    // useEffect(()=>{\n    //     console.log(`text is update : ${text}`)\n    // },[text])\n\n    const [isVisible,setIsVisible]= useState(false);\n    const toggle = ()=>setIsVisible(!isVisible);\n\n    return(\n        <div style={{padding:20}}>\n            <button onClick={toggle}>ON/OFF</button>\n        </div>\n    )\n\n}\n\nexport default Lifecycle"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAA;AAE/C,MAAMC,SAAS,GAAG,MAAI;EAAA;EAElB;EACA;;EAEA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAEH,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMI,MAAM,GAAG,MAAID,YAAY,CAAC,CAACD,SAAS,CAAC;EAE3C,oBACI;IAAK,KAAK,EAAE;MAACG,OAAO,EAAC;IAAE,CAAE;IAAA,uBACrB;MAAQ,OAAO,EAAED,MAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAgB;IAAA;IAAA;IAAA;EAAA,QACtC;AAGd,CAAC;AAAA,GArCKH,SAAS;AAAA,KAATA,SAAS;AAuCf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}