{"ast":null,"code":"var _jsxFileName = \"/Users/imsubin/Documents/GitHub/React_study/React_project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport './App.css';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n\n// const dummyList = [\n//   {\n//     id:1 ,\n//     author:\"임수빈\",\n//     content:\"hello\",\n//     emotion:4,\n//     created_date: new Date().getTime()\n//   },\n//   {\n//     id:2,\n//     author:\"홍길동\",\n//     content:\"hello1212\",\n//     emotion:1,\n//     created_date: new Date().getTime()\n//   },\n//   {\n//     id:3,\n//     author:\"김나나\",\n//     content:\"hello ㅎㅎ\",\n//     emotion:2,\n//     created_date: new Date().getTime()\n//   }\n// ]\n\n//부모컴포넌트에서 자식컴포넌트에게 어떤값을 이름을붙여서 보내는게 prop\n//diaryList === prop임\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  //promise를 반환하는 비동기 함수로\n  const getData = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then(res => res.json());\n    const initData = res.slice(0, 20).map(it => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++\n      };\n    });\n    setData(initData);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const onCreate = useCallback((author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    //setData 에 함수를 전달 = 함수형 업데이트\n    setData(data => [newItem, ...data]);\n  }, []);\n  const onRemove = useCallback(targetId => {\n    setData(data => data.filter(it => it.id !== targetId));\n  }, []);\n  const onEdit = (targetid, newContent) => {\n    setData(data.map(it => it.id === targetid ? {\n      ...it,\n      content: newContent\n    } : it));\n  };\n  //리턴을가지고 있는 함수 useMemo 사용가능\n  //useMemo는 첫밴째 인자로 콜백함수를 받아서 이 콜백함수가 리턴하는 값\n  //두번째 인자는 빈배열, 두번째 인자가 변화할때만 콜백함수 실행\n  //즉 데이터가 추가될때만 일기분석을 한다는 내용!\n  //이렇게 getDiaryAnalysis는 리턴받은 값을 가지므로 더이상 함수가 아님!! 변수처럼 대해죠\n  const getDiaryAnalysis = useMemo(() => {\n    const goodCount = data.filter(it => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = goodCount / data.length * 100;\n    return {\n      goodCount,\n      badCount,\n      goodRatio\n    };\n  }, [data.length]);\n  const {\n    goodCount,\n    badCount,\n    goodRatio\n  } = getDiaryAnalysis; //비구조화 객체 할당\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC804\\uCCB4 \\uC77C\\uAE30 : \", data.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uC77C\\uAE30 \\uAC1C\\uC218 : \", goodCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uB098\\uC05C \\uC77C\\uAE30 \\uAC1C\\uC218 : \", badCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uC77C\\uAE30 \\uBE44\\uC728 : \", goodRatio, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      diaryList: data,\n      onRemove: onRemove,\n      onEdit: onEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Cjw/LWNfr/TNYkTCen2Cuxqa3ck=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","DiaryEditor","DiaryList","App","data","setData","dataId","getData","res","fetch","then","json","initData","slice","map","it","author","email","content","body","emotion","Math","floor","random","created_date","Date","getTime","id","current","onCreate","newItem","onRemove","targetId","filter","onEdit","targetid","newContent","getDiaryAnalysis","goodCount","length","badCount","goodRatio"],"sources":["/Users/imsubin/Documents/GitHub/React_study/React_project/src/App.js"],"sourcesContent":["import React,{ useCallback, useEffect, useMemo, useRef,useState } from 'react';\nimport './App.css'\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n\n\n// const dummyList = [\n//   {\n//     id:1 ,\n//     author:\"임수빈\",\n//     content:\"hello\",\n//     emotion:4,\n//     created_date: new Date().getTime()\n//   },\n//   {\n//     id:2,\n//     author:\"홍길동\",\n//     content:\"hello1212\",\n//     emotion:1,\n//     created_date: new Date().getTime()\n//   },\n//   {\n//     id:3,\n//     author:\"김나나\",\n//     content:\"hello ㅎㅎ\",\n//     emotion:2,\n//     created_date: new Date().getTime()\n//   }\n// ]\n\n//부모컴포넌트에서 자식컴포넌트에게 어떤값을 이름을붙여서 보내는게 prop\n//diaryList === prop임\nfunction App() {\n\n  const [data,setData] = useState([])\n\n  const dataId = useRef(0)\n\n  //promise를 반환하는 비동기 함수로\n  const getData = async()=>{\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then((res)=>res.json());\n    \n    const initData = res.slice(0,20).map((it)=>{\n      return{\n        author : it.email,\n        content : it.body,\n        emotion : Math.floor(Math.random()*5)+1,\n        created_date : new Date().getTime(),\n        id : dataId.current++\n      }\n    })\n\n    setData(initData);\n\n  }\n\n  useEffect(()=>{\n    getData();\n  },[]);\n\n  const onCreate = useCallback((author,content,emotion)=>{\n    const created_date = new Date().getTime();\n    const newItem={\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    }\n    dataId.current+=1;\n    //setData 에 함수를 전달 = 함수형 업데이트\n    setData((data)=>[newItem,...data])\n  },[]);\n\n  const onRemove=useCallback((targetId)=>{\n    setData((data)=>data.filter((it)=>it.id !== targetId));\n  },[]);\n\n  const onEdit = (targetid,newContent)=>{\n    setData(\n      data.map((it)=>it.id===targetid?{...it,content:newContent}:it)\n    )\n\n  }\n  //리턴을가지고 있는 함수 useMemo 사용가능\n  //useMemo는 첫밴째 인자로 콜백함수를 받아서 이 콜백함수가 리턴하는 값\n  //두번째 인자는 빈배열, 두번째 인자가 변화할때만 콜백함수 실행\n  //즉 데이터가 추가될때만 일기분석을 한다는 내용!\n  //이렇게 getDiaryAnalysis는 리턴받은 값을 가지므로 더이상 함수가 아님!! 변수처럼 대해죠\n  const getDiaryAnalysis= useMemo(\n    ()=>{\n    const goodCount = data.filter((it)=>it.emotion>=3).length;\n    const badCount = data.length-goodCount;\n    const goodRatio = (goodCount/data.length)*100;\n    return{goodCount,badCount,goodRatio};\n  },[data.length]\n  );\n\n  const{goodCount,badCount,goodRatio} = getDiaryAnalysis; //비구조화 객체 할당\n\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate}/>\n      <div>전체 일기 : {data.length}</div>\n      <div>기분 좋은 일기 개수 : {goodCount}</div>\n      <div>기분 나쁜 일기 개수 : {badCount}</div>\n      <div>기분 좋은 일기 비율 : {goodRatio}%</div>\n      <DiaryList diaryList={data} onRemove={onRemove} onEdit={onEdit}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}