{"ast":null,"code":"var _jsxFileName = \"/Users/imsubin/Documents/GitHub/React_study/React_project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n\n// const dummyList = [\n//   {\n//     id:1,\n//     author:\"임수빈\",\n//     content:\"hello\",\n//     emotion:4,\n//     created_date: new Date().getTime()\n//   },\n//   {\n//     id:2,\n//     author:\"홍길동\",\n//     content:\"hello1212\",\n//     emotion:1,\n//     created_date: new Date().getTime()\n//   },\n//   {\n//     id:3,\n//     author:\"김나나\",\n//     content:\"hello ㅎㅎ\",\n//     emotion:2,\n//     created_date: new Date().getTime()\n//   }\n// ]\n\n//부모컴포넌트에서 자식컴포넌트에게 어떤값을 이름을붙여서 보내는게 prop\n//diaryList === prop임\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  //promise를 반환하는 비동기 함수로\n  const getData = async () => {\n    const initData = res.slice(0, 20).map(it => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++\n      };\n    });\n    setData(initData);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n  const onRemove = targetId => {\n    console.log(`${targetId}가 삭제되었습니다`);\n    const newDiaryList = data.filter(it => it.id !== targetId);\n    setData(newDiaryList);\n  };\n  const onEdit = (targetid, newContent) => {\n    setData(data.map(it => it.id === targetid ? {\n      ...it,\n      content: newContent\n    } : it));\n  };\n  const getDiaryAnalysis = () => {\n    console.log(\"일기 분석 시작\");\n    const goodCount = data.filter(it => emotion >= 3).length;\n    const badCount = data.length - goodCount;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      diaryList: data,\n      onRemove: onRemove,\n      onEdit: onEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TBAExamjWo0IDtUf9Szh9LOactU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","DiaryEditor","DiaryList","App","data","setData","dataId","getData","initData","res","slice","map","it","author","email","content","body","emotion","Math","floor","random","created_date","Date","getTime","id","current","onCreate","newItem","onRemove","targetId","console","log","newDiaryList","filter","onEdit","targetid","newContent","getDiaryAnalysis","goodCount","length","badCount"],"sources":["/Users/imsubin/Documents/GitHub/React_study/React_project/src/App.js"],"sourcesContent":["import React,{ useEffect, useRef,useState } from 'react';\nimport './App.css'\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n\n\n// const dummyList = [\n//   {\n//     id:1,\n//     author:\"임수빈\",\n//     content:\"hello\",\n//     emotion:4,\n//     created_date: new Date().getTime()\n//   },\n//   {\n//     id:2,\n//     author:\"홍길동\",\n//     content:\"hello1212\",\n//     emotion:1,\n//     created_date: new Date().getTime()\n//   },\n//   {\n//     id:3,\n//     author:\"김나나\",\n//     content:\"hello ㅎㅎ\",\n//     emotion:2,\n//     created_date: new Date().getTime()\n//   }\n// ]\n\n//부모컴포넌트에서 자식컴포넌트에게 어떤값을 이름을붙여서 보내는게 prop\n//diaryList === prop임\nfunction App() {\n\n  const [data,setData] = useState([])\n\n  const dataId = useRef(0)\n\n  //promise를 반환하는 비동기 함수로\n  const getData = async()=>{\n    const initData = res.slice(0,20).map((it)=>{\n      return{\n        author : it.email,\n        content : it.body,\n        emotion : Math.floor(Math.random()*5)+1,\n        created_date : new Date().getTime(),\n        id : dataId.current++\n      }\n    })\n\n    setData(initData);\n\n  }\n\n  useEffect(()=>{\n    getData();\n  },[]);\n\n  const onCreate = (author,content,emotion)=>{\n    const created_date = new Date().getTime();\n    const newItem={\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    }\n    dataId.current+=1;\n    setData([newItem,...data])\n  }\n\n  const onRemove=(targetId)=>{\n    console.log(`${targetId}가 삭제되었습니다`);\n    const newDiaryList = data.filter((it)=>it.id !== targetId);\n    setData(newDiaryList);\n  }\n\n  const onEdit = (targetid,newContent)=>{\n    setData(\n      data.map((it)=>it.id===targetid?{...it,content:newContent}:it)\n    )\n\n  }\n  const getDiaryAnalysis= ()=>{\n    console.log(\"일기 분석 시작\");\n    \n    const goodCount = data.filter((it)=>emotion>=3).length;\n    const badCount = data.length-goodCount;\n  }\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate}/>\n      <DiaryList diaryList={data} onRemove={onRemove} onEdit={onEdit}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}